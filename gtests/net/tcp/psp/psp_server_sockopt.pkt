// Test the server PSP getsockopt

--psp_udp_port=1000

`../common/defaults.sh
ethtool -K tun0 psp-ip on
echo 0 > /proc/sys/net/ipv4/psp_hide_payload_from_taps`

 0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
+0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
+0 bind(3, ..., ...) = 0
+0 listen(3, 1) = 0

// Passing wrong optlen should fail with EINVAL
+0 getsockopt(3, SOL_TCP, TCP_PSP_LISTENER, { spi=1 }, [20]) = -1 EINVAL (Invalid argument)

// This getsockopt write the TX SPI and reads the RX SPI
// For simplicity assume both sides chose the same SPI
+0 getsockopt(3, SOL_TCP, TCP_PSP_LISTENER, { spi=1 }, [24]) = 0

+0 < encap psp spi 1 S 0:0(0) win 32792 <mss 1000,sackOK,nop,nop,nop,wscale 7>
+0 > encap psp spi 1 S. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK,nop,wscale 8>
+0 < encap psp spi 1 . 1:1(0) ack 1 win 257

+0 accept(3, ..., ...) = 4

+0 send(4, ..., 1000, 0) = 1000
+0 > encap psp spi 1 P. 1:1001(1000) ack 1
+0 < encap psp spi 1 . 1:1(0) ack 1001 win 257

+0.1 < encap psp spi 1 P. 1:501(500) ack 1001 win 257
+0 > encap psp spi 1 . 1001:1001(0) ack 501
+0 recv(4, ..., 1000, 0) = 500

+0 close(3) = 0
+0 close(4) = 0
